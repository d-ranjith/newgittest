#!/bin/bash

dry_run=false
delete=false
audit_dir="audit_logs"
batch_size=50  # Adjust batch size as needed

usage() {
    echo "Usage: $0 [-d] [-D]"
    echo "Options:"
    echo "  -d  Dry run: List deltas without deleting"
    echo "  -D  Delete deltas and log to audit file"
    exit 1
}

while getopts "dD" option; do
    case "$option" in
        d) dry_run=true ;;
        D) delete=true ;;
        *) usage ;;
    esac
done

# Ensure audit directory exists
mkdir -p $audit_dir

# Function to process namespaces in a batch
process_batch() {
    local start_index=$1
    local end_index=$2
    for ((i = $start_index; i < $end_index; i++)); do
        namespace=${namespaces[$i]}
        process_namespace $namespace
    done
}

# Function to process a single namespace
process_namespace() {
    local namespace=$1
    echo "Processing namespace: $namespace"
    # Get all ConfigMaps in the namespace
    all_configmaps=$(oc get configmaps -n $namespace --no-headers | awk '{print $1}')
    # Find delta ConfigMaps
    for configmap in $all_configmaps; do
        found=false
        for required_configmap in "${required_configmaps[@]}"; do
            if [ "$configmap" == "$required_configmap" ]; then
                found=true
                break
            fi
        done
        if ! $found; then
            echo "Delta ConfigMap: $configmap"
            if $delete; then
                delete_configmap $namespace $configmap
            fi
        fi
    done
    if [ -z "$all_configmaps" ]; then
        echo "No ConfigMaps found in namespace."
    fi
}

# Function to delete ConfigMap and log to audit file
delete_configmap() {
    local namespace=$1
    local configmap=$2
    echo "Deleting ConfigMap $configmap in namespace $namespace"
    if ! $dry_run; then
        oc delete configmap $configmap -n $namespace >> "$audit_dir/$namespace.log"
    fi
}

# Define required ConfigMaps
required_configmaps=(
    "configmap1"
    "configmap2"
    # Add more required ConfigMaps here
)

# Initialize namespaces array
namespaces=($(oc get namespaces --no-headers | awk '{print $1}'))

# Calculate number of batches
num_namespaces=${#namespaces[@]}
num_batches=$((($num_namespaces + $batch_size - 1) / $batch_size))

# Iterate over batches
for ((i = 0; i < $num_batches; i++)); do
    start_index=$(($i * $batch_size))
    end_index=$((($i + 1) * $batch_size))
    if [ $end_index -gt $num_namespaces ]; then
        end_index=$num_namespaces
    fi
    process_batch $start_index $end_index &
done

# Wait for all background processes to finish
wait

echo "Processing complete."
