# Run the Snyk scan, capture the output, and display it on the console
snyk_output=$(snyk scan your-project | tee snyk_report.txt)

# Capture the exit code
exit_code=$?

# Initialize a variable to count vulnerabilities
vulnerability_count=0

if [ $exit_code -eq 0 ]; then
    result='{"status": "success", "message": "Snyk scan was successful; no vulnerabilities found.", "exit_code": '$exit_code', "vulnerability_count": '$vulnerability_count'}'
else
    # Snyk scan failed; vulnerabilities found.
    # Extract the vulnerability count from the Snyk output.
    vulnerability_count=$(grep -c "Vulnerability ID:" snyk_report.txt)
    result='{"status": "failure", "message": "Snyk scan failed; '$vulnerability_count' vulnerabilities found.", "exit_code": '$exit_code', "vulnerability_count": '$vulnerability_count', "details": '$snyk_output'}'
fi

# Output the JSON blob
echo $result

# Clean up: Remove the text file
rm snyk_report.txt



# Function to run a command, capture the exit code, and generate result JSON
compute_exit_code() {
    local command_to_run="$1"
    local snyk_output_file="$2"
    local exit_code=0
    local result

    # Run the specified command, capture the output, and display it on the console
    $command_to_run | tee "$snyk_output_file"

    # Capture the exit code of the command
    exit_code=$?

    # Initialize a variable to count vulnerabilities
    vulnerability_count=0

    if [ $exit_code -eq 0 ]; then
        result='{"status": "success", "message": "Command was successful; no vulnerabilities found.", "exit_code": '"$exit_code"', "vulnerability_count": '"$vulnerability_count"'}'
    else
        # Command failed; vulnerabilities found.
        # Extract the vulnerability count from the output file.
        vulnerability_count=$(grep -c "Vulnerability ID:" "$snyk_output_file")
        result='{"status": "failure", "message": "Command failed; '"$vulnerability_count"' vulnerabilities found.", "exit_code": '"$exit_code"', "vulnerability_count": '"$vulnerability_count"', "details": '"$(cat "$snyk_output_file")"'}'
    fi

    # Return the computed result JSON
    echo "$result"
}

# Example usage:
snyk_command="snyk scan your-project"
snyk_output_file="snyk_report.txt"

# Call the function to run the Snyk scan, capture the exit code, and generate result JSON
result=$(compute_exit_code "$snyk_command" "$snyk_output_file")

# Access the 'result' variable outside the function
echo "Result JSON: $result"
