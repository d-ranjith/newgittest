import os
import yaml

def extract_script_contents(task_data):
    script_contents = []
    spec = task_data.get('spec', {})
    steps = spec.get('steps', [])
    for step in steps:
        script = step.get('script')
        if script:
            script_contents.append((step.get('name'), script))
    return script_contents

def process_tekton_folder(folder_path, output_file):
    original_total_size = 0
    updated_total_size = 0
    file_sizes = []

    with open(output_file, 'w') as f:
        f.write("File Name,Original Size (bytes),Updated Size (bytes)\n")

        for filename in os.listdir(folder_path):
            file_path = os.path.join(folder_path, filename)
            if os.path.isfile(file_path):
                print(f"Processing file: {filename}")
                with open(file_path, 'r') as file:
                    task_data = yaml.safe_load(file.read())
                    original_file_size = os.path.getsize(file_path)
                    original_total_size += original_file_size

                script_contents = extract_script_contents(task_data)

                if script_contents:
                    updated_task_data = task_data.copy()
                    spec = updated_task_data.get('spec', {})
                    steps = spec.get('steps', [])
                    for step in steps:
                        for step_name, script in script_contents:
                            if step.get('script') == script:
                                script_filename = f"{filename}_{step_name}.sh"
                                step['command'] = ["./{}".format(script_filename)]
                                del step['script']

                    updated_content = yaml.dump(updated_task_data)

                    for step_name, script in script_contents:
                        script_filename = f"{filename}_{step_name}.sh"
                        script_file_path = os.path.join(folder_path, script_filename)
                        with open(script_file_path, 'w') as script_file:
                            script_file.write(script)

                    updated_file_path = os.path.join(folder_path, f"updated_{filename}")
                    with open(updated_file_path, 'w') as updated_file:
                        updated_file.write(updated_content)
                    updated_file_size = os.path.getsize(updated_file_path)
                    updated_total_size += updated_file_size

                    file_sizes.append((filename, original_file_size, updated_file_size))
                    f.write(f"{filename},{original_file_size},{updated_file_size}\n")

        f.write(f"Total,{original_total_size},{updated_total_size}\n")

    print("\nCSV output written to:", output_file)

# Example usage
tekton_folder = "/path/to/tekton/folder"
output_file = "file_sizes.csv"
process_tekton_folder(tekton_folder, output_file)
