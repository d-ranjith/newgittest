const convict = require('convict');

const config = convict({
  versions: {
    doc: 'List of version objects',
    format: Array, // Specifies that it should be an array
    default: [], // Default value is an empty array, you can add version objects to this array
    env: 'VERSIONS', // Optional: Environment variable name
    children: {
      version: {
        doc: 'Version number',
        format: String, // Assumes version is a string, adjust as needed
        default: '', // Default value for the version
      },
      createdBy: {
        doc: 'Creator of the version',
        format: String, // Assumes createdBy is a string, adjust as needed
        default: 'xy12345', // Default creator
      },
      createdTime: {
        doc: 'Time when the version was created',
        format: 'Date with ISO 8601 format', // Assumes createdTime is a date in ISO 8601 format
        default: '', // Default created time
      },
      lastModifiedTime: {
        doc: 'Time when the version was last modified',
        format: 'Date with ISO 8601 format', // Assumes lastModifiedTime is a date in ISO 8601 format
        default: '', // Default last modified time
      },
      branchName: {
        doc: 'Name of the branch associated with the version',
        format: String, // Assumes branchName is a string, adjust as needed
        default: 'master', // Default branch name
      },
      enabled: {
        doc: 'Flag indicating whether the version is enabled',
        format: Boolean, // Specifies that it should be a boolean
        default: true, // Default value
      },
    },
  },
});

// Load and validate the configuration
config.loadFile('config.json'); // Load configuration from a file (if needed)
config.validate({ allowed: 'strict' }); // Validate the configuration

// Access the properties, e.g., config.get('versions') to get the array of version objects
