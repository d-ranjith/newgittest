import os
import re
import shutil

def extract_script_contents(content):
    script_contents = []
    pattern = r'script\w*:\s*\|?([\s\S]*?)\n\s*(?=\w+:)'
    matches = re.findall(pattern, content)
    for match in matches:
        script_contents.append(match.strip())
    return script_contents

def process_tekton_folder(folder_path):
    original_total_size = 0
    updated_total_size = 0
    script_counter = 1

    for filename in os.listdir(folder_path):
        file_path = os.path.join(folder_path, filename)
        if os.path.isfile(file_path):
            with open(file_path, 'r') as file:
                content = file.read()
                original_total_size += os.path.getsize(file_path)

            script_contents = extract_script_contents(content)

            if script_contents:
                updated_content = content
                for i, script in enumerate(script_contents, start=1):
                    script_filename = f"{filename}_{i}.sh"
                    script_file_path = os.path.join(folder_path, script_filename)
                    with open(script_file_path, 'w') as script_file:
                        script_file.write(script)

                    updated_content = re.sub(r'script\w*:\s*\|?[\s\S]*?\n\s*(?=\w+:)', f"script: {script_filename}\n", updated_content, count=1)

                updated_file_path = os.path.join(folder_path, f"updated_{filename}")
                with open(updated_file_path, 'w') as updated_file:
                    updated_file.write(updated_content)
                updated_total_size += os.path.getsize(updated_file_path)

                script_counter += len(script_contents)

    print(f"Original total size: {original_total_size / (1024 * 1024):.2f} MB")
    print(f"Updated total size: {updated_total_size / (1024 * 1024):.2f} MB")

# Example usage
tekton_folder = "/path/to/tekton/folder"
process_tekton_folder(tekton_folder)
