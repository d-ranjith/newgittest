import os
import yaml

def extract_script_contents(task_data):
    script_contents = []
    spec = task_data.get('spec', {})
    steps = spec.get('steps', [])
    for step in steps:
        script = step.get('script')
        if script:
            script_contents.append((step.get('name'), script))
    return script_contents

def process_tekton_folder(folder_path):
    original_total_size = 0
    updated_total_size = 0

    for filename in os.listdir(folder_path):
        file_path = os.path.join(folder_path, filename)
        if os.path.isfile(file_path):
            with open(file_path, 'r') as file:
                task_data = yaml.safe_load(file.read())
                original_total_size += os.path.getsize(file_path)

            script_contents = extract_script_contents(task_data)

            if script_contents:
                updated_task_data = task_data.copy()
                spec = updated_task_data.get('spec', {})
                steps = spec.get('steps', [])
                for step in steps:
                    for step_name, script in script_contents:
                        if step.get('script') == script:
                            script_filename = f"{filename}_{step_name}.sh"
                            step['command'] = ["./{}".format(script_filename)]
                            del step['script']

                updated_content = yaml.dump(updated_task_data)

                for step_name, script in script_contents:
                    script_filename = f"{filename}_{step_name}.sh"
                    script_file_path = os.path.join(folder_path, script_filename)
                    with open(script_file_path, 'w') as script_file:
                        script_file.write(script)

                updated_file_path = os.path.join(folder_path, f"updated_{filename}")
                with open(updated_file_path, 'w') as updated_file:
                    updated_file.write(updated_content)
                updated_total_size += os.path.getsize(updated_file_path)

    print(f"Original total size: {original_total_size / (1024 * 1024):.2f} MB")
    print(f"Updated total size: {updated_total_size / (1024 * 1024):.2f} MB")

# Example usage
tekton_folder = "/path/to/tekton/folder"
process_tekton_folder(tekton_folder)
