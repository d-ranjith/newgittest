import os
import requests
import logging

class ArtifactoryDownloader:
    def __init__(self, base_url, username, password, cert_path, logger):
        self.base_url = base_url
        self.username = username
        self.password = password
        self.cert_path = cert_path
        self.logger = logger

    def download_file(self, file_url, output_dir):
        response = requests.get(file_url, auth=self._get_auth(), verify=self.cert_path)
        response.raise_for_status()

        if response.status_code == 200:
            file_name = file_url.split("/")[-1]
            file_path = os.path.join(output_dir, file_name)
            with open(file_path, "wb") as file:
                file.write(response.content)
            self.logger.info(f"File downloaded successfully: {file_name}")
        else:
            self.logger.error(f"Failed to download file: {file_url}")

    def _get_auth(self):
        return (self.username, self.password) if self.cert_path is None else None

    def download_files(self, output_dir):
        self.logger.info(f"Downloading files from Artifactory folder: {self.base_url}...")
        
        try:
            response = requests.get(self.base_url, auth=self._get_auth(), verify=self.cert_path)
            response.raise_for_status()

            if response.status_code == 200:
                folder_data = response.json()
                files = folder_data["children"]

                for file in files:
                    file_name = file["uri"]
                    file_url = f"{self.base_url}/{file_name}"
                    self.logger.info(f"Downloading file: {file_name}")
                    self.download_file(file_url, output_dir)

                self.logger.info("All files downloaded successfully.")
            else:
                self.logger.error("Failed to retrieve folder data from Artifactory.")
        except requests.exceptions.RequestException as e:
            self.logger.error(f"Error occurred during file download: {str(e)}")

# Main application
class MyApp:
    def __init__(self, logger):
        self.logger = logger

    def process_artifactory_folder(self, base_url, username, password, cert_path, output_dir):
        downloader = ArtifactoryDownloader(base_url, username, password, cert_path, self.logger)
        downloader.download_files(output_dir)

# Usage in main.py
if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, format="[%(levelname)s] %(asctime)s %(message)s", datefmt="%Y-%m-%d %H:%M:%S")
    logger = logging.getLogger(__name__)

    app = MyApp(logger)

    base_url = "https://your-artifactory-url"
    username = "your-username"
    password = "your-password"
    cert_path = "path-to-certificate-file"
    folder_path = "your-folder-path"
    output_dir = "your-output-directory"

    artifact_base_url = f"{base_url}/{folder_path}"
    app.process_artifactory_folder(artifact_base_url, username, password, cert_path, output_dir)
